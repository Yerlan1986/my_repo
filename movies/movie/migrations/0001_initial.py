# Generated by Django 5.0.12 on 2025-05-09 07:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('year', models.IntegerField()),
                ('released', models.CharField(max_length=250)),
                ('runtime', models.CharField(max_length=250)),
                ('awards', models.CharField(max_length=250)),
                ('poster', models.CharField(max_length=500)),
                ('language', models.CharField(max_length=500)),
                ('country', models.CharField(max_length=500)),
                ('average_rating', models.PositiveIntegerField(default=0)),
                ('imdbRating', models.FloatField(blank=True, null=True)),
                ('plot', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(related_name='movies', through='movie.MovieGenre', to='movie.genre'),
        ),
        migrations.CreateModel(
            name='PersonRoleInMovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('actor', 'Актер'), ('director', 'Режиссер'), ('writer', 'Сценарист')], default=None, max_length=15)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_roles', to='movie.movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.person')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='persons',
            field=models.ManyToManyField(related_name='movies', through='movie.PersonRoleInMovie', to='movie.person'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('rating', models.PositiveIntegerField(choices=[(5, 'отличный фильм'), (4, 'хороший фильм'), (3, 'средний фильм'), (2, 'плохой фильм'), (1, 'ужасный фильм')], default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='movie.movie')),
            ],
            options={
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='movie',
            unique_together={('title', 'year')},
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=1)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.genre')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'genre')},
            },
        ),
        migrations.CreateModel(
            name='UserPlayList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'movie')},
            },
        ),
    ]
